<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gradle_mybatis_spring_study.mapper.StudentMapper">

	<sql id="selectSQL">
		SELECT STUD_ID, NAME, EMAIL, DOB, PHONE 
		  FROM STUDENTS
	</sql>
	<sql id="whereSQL">
	    <where>
	        <if test="studId != null">
	            stud_id=#{studId}
	        </if>
	    </where>
	</sql>
	
	
	<!-- TypeHandler 이용 -->
	<select id="selectStudentByNo" parameterType="Student" resultType="Student">
		<include refid="selectSQL"/>
		<include refid="whereSQL"/>
	</select>
	
	<!-- ResultMap이용 -->
	<resultMap type="Student" id="stdResult">
		<id column="stud_id" property="studId"/>
		<result column="f" property="phone.countryCode"/>
		<result column="m" property="phone.stateCode"/>
		<result column="l" property="phone.number"/>
	</resultMap>
	
	<select id="selectStudentByNoWithResultMap" parameterType="Student" resultMap="stdResult">
		select stud_id, name, email, dob, 
               substr(phone, 1, 3) as f, 
               substr(phone, 5, 3) as m, 
               substr(phone, 9, 4) as l
		  from students 
		 where stud_id = #{studId}
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSQL"/>
	</select>
	
	<!-- 결과매핑 -->
	<resultMap type="Student" id="StudentResult">
		<id column="stud_id" property="studId"/>
		<result property="name"   column="name"/>
	    <result property="email"  column="email"/>
	    <result property="phone"  column="phone"/>
	    <result property="dob"    column="dob"/>
	</resultMap>
	
	<select id="selectStudentByAllForResutlMap" resultMap="StudentResult">
		<include refid="selectSQL"/>
	</select>
	
	<!-- HashMap -->
	<select id="selectStudentByAllForHashMap" resultType="map">
	    <include refid="selectSQL"/>
	</select>
	
	<!-- 내포된 결과매핑(ResultMap)을 사용한 일대일 매핑 -->
	<resultMap type="Student" id="StudentAssociation" extends="StudentResult">
		<association property="address" resultMap="gradle_mybatis_spring_study.mapper.AddressMapper.AddressResult"/>
	</resultMap>
	
	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
		SELECT STUD_ID, NAME, EMAIL, PHONE, DOB, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
		  FROM STUDENTS S JOIN ADDRESSES A ON S.ADDR_ID=A.ADDR_ID
		 WHERE STUD_ID = #{studId}
	</select>
	
	<!-- enum 타입 다루기 -->
	<insert id="insertEnumStudent" parameterType="Student">
	    insert into students(stud_id, name, email,phone, dob, gender) 
	    values(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
	</insert>
	
	<select id="selectStudentByNoForEnum" parameterType="Student" resultType="Student">
		SELECT STUD_ID, NAME, EMAIL, DOB, PHONE, gender 
		  FROM STUDENTS
		 WHERE STUD_ID = #{studId}
	</select>
	
	
	<!-- 여러 개의 입력 파라미터 전달 -->
	<sql id="selectAddGenderSQL">
		SELECT STUD_ID, NAME, EMAIL, DOB, PHONE, GENDER 
		  FROM STUDENTS
	</sql>
	<sql id="where_name_email">
	    <where>
	        <if test="name != null">
	            name = #{name}
	        </if>
	        <if test="email != null">
	            AND email = #{email}
	        </if>
	    </where>
	</sql>
	
	<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
	    <result property="gender" column="gender" />
	</resultMap>
	
	<select id="selectStudentByMap" parameterType="map" resultMap="StudentGenderResult">
	    <include refid="selectAddGenderSQL"/>
	    <include refid="where_name_email"/>
	</select>
	
	<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
	    <include refid="selectAddGenderSQL"/>
	    <include refid="where_name_email"/>
	</select>
	
	<!-- insert -->
	<insert id="insertStudent" parameterType="Student">
	    insert into students(stud_id, name, email, phone, dob) 
	    values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</insert>
	
	<!-- delete -->
	<delete id="deleteStudent" parameterType="int">
	    delete 
	      from students 
	     where stud_id=#{studId}
	</delete>
	
	<!-- update -->
	<update id="updateStudent" parameterType="Student">
	    update students 
	       set name=#{name}, email=#{email},phone=#{phone}, dob=#{dob}
	     where stud_id=#{studId}
	</update>
	
	<!-- ResultSet 처리방식의 재정의 -->
	<select id="selectStudentForMap" parameterType="int" resultMap="StudentGenderResult">
	    <include refid="selectSQL"/>
	    <include refid="whereSQL"/>
	</select>
		
	
</mapper>

















